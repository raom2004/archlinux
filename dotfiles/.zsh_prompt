#!/bin/zsh
## zsh PS1 prompt customization
PROMPT='%F{cyan}%n%f@%M: %~%F{cyan}${vcs_info_msg_0_}%f %# '

## add "git prompt" to PS1 prompt
if [[ ! -f "$HOME/.zsh-git-prompt/zshrc.sh" ]]; then
    git clone https://github.com/olivierverdier/zsh-git-prompt.git ~/.zsh-git-prompt --depth=1
fi

if [[ -f "$HOME/.zsh-git-prompt/zshrc.sh" ]]; then
    source ~/.zsh-git-prompt/zshrc.sh
    # an example prompt
    PROMPT='%B%m%~%b$(git_super_status) %# '
fi


# function zle-line-init zle-keymap-select {
#     RPS1="${${KEYMAP/vicmd/-- NORMAL --}/(main|viins)/-- INSERT --}"
#     RPS2=$RPS1
#     zle reset-prompt
# }
# zle -N zle-line-init
# zle -N zle-keymap-select


# TODO multiline zsh PS1 prompt
#https://unix.stackexchange.com/questions/547/make-my-zsh-prompt-show-mode-in-vi-mode
terminfo_down_sc=$terminfo[cud1]$terminfo[cuu1]$terminfo[sc]$terminfo[cud1]

function insert-mode () { printf "[vi:ins] " }
function command-mode () { printf "[vi:cmd] " }
function emacs-mode () { printf "(Emacs) " }

precmd () {
    # yes, I actually like to have a new line, then some stuff and then 
    # the input line
#     print -rP "
# [%D{%a, %d %b %Y, %H:%M:%S}] %n %{$fg[blue]%}%m%{$reset_color%}"

    # this is required for initial prompt and a problem I had with Ctrl+C or
    # Enter when in normal mode (a new line would come up in insert mode,
    # but normal mode would be indicated)
    PS1="%{$terminfo_down_sc$(insert-mode)$terminfo[rc]%}%~ $ "
}

function set-prompt () {
    case ${KEYMAP} in
      (vicmd)      VI_MODE="$(command-mode)" ;;
      (main|viins) VI_MODE="$(insert-mode)" ;;
      (emacs)      VI_MODE="$(emacs-mode)" ;;
    esac
    # PS1="%n@%m%{$terminfo_down_sc$VI_MODE$terminfo[rc]%}%~ $ "
    PS1="${VI_MODE}${cyan}%n${reset_color}@%m%{$terminfo_down_sc%}%~ $ "
}

function zle-line-init zle-keymap-select {
    set-prompt
    zle reset-prompt
}
preexec () { print -rn -- $terminfo[el]; }

zle -N zle-line-init
zle -N zle-keymap-select


# emacs:
# Local Variables:
# sh-basic-offset: 2
# End:

# vim: set ts=2 sw=2 et:
