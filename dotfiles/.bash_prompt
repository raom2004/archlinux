#!/bin/bash
#
# ~/.bash_prompt
#
# Dependencies: None


### FUNCTION DECLARATION

function prompt_command {
  # Check if we are inside a git repository
  if git status > /dev/null 2>&1; then
    # Only get the name of the branch
    export GIT_STATUS="($(git status | grep 'On branch' | cut -b 11-)) "
  else
    export GIT_STATUS=""
  fi
}

### CODE

# This function gets called every time PS1 is shown
PROMPT_COMMAND=prompt_command

## Set prompt

## testing
# PS1="${Cyan}\u${NC}@\h: ${Cyan}\w${NC}${BWhite}\$GIT_STATUS${NC}\\$ "
PS1="${NCyan}\u${NC}@\h: \w ${NCyan}\$GIT_STATUS${NC}\\$ "

## simple version
# PS1="\$GIT_STATUS \u@\h:\w\$ "
## colored version
# PS1="${Cyan}\u${NC}${BWhite}@\h${NC}: ${Cyan}\w${NC} \$GIT_STATUS\\$ "
## adcance version with git prompt
# source /usr/share/git/git-prompt.sh
# PS1="${Cyan}\u${NC}${BWhite}@\h${NC}:${Cyan}\w${NC}$(__git_ps1 "${Cyan} (${NC}%s${Cyan})${NC}") \$ "


## TODO: customizing prompt with smiles
# RESET="\[\017\]"
# NORMAL="\[\033[0m\]"
# RED="\[\033[31;1m\]"
# YELLOW="\[\033[33;1m\]"
# WHITE="\[\033[37;1m\]"
# SMILEY="${WHITE}:)${NORMAL}"
# FROWNY="${RED}:(${NORMAL}"
# SELECT="if [ \$? = 0 ]; then echo \"${SMILEY}\"; else echo \"${FROWNY}\"; fi"

# Throw it all together 
# PS1="${RESET}${YELLOW}\h${NORMAL} \`${SELECT}\` ${YELLOW}>${NORMAL} "


## git prompt
if [[ ! -f "$HOME/.bash-git-prompt/gitprompt.sh" ]]; then
  git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1
fi

if [[ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]]; then
  # GIT_PROMPT_ONLY_IN_REPO=1
  # GIT_PROMPT_SHOW_UPSTREAM=1
  # GIT_PROMPT_THEME="Custom"
  # GIT_PROMPT_START="${Cyan}\u${ResetColor}@\h \w"
  # GIT_PROMPT_END=" $ "

  # GIT_PROMPT_FETCH_REMOTE_STATUS=0   # uncomment to avoid fetching remote status
  # GIT_PROMPT_IGNORE_SUBMODULES=1 # uncomment to avoid searching for changed files in submodules
  # GIT_PROMPT_WITH_VIRTUAL_ENV=0 # uncomment to avoid setting virtual environment infos for node/python/conda environments

  # GIT_PROMPT_SHOW_UPSTREAM=1 # uncomment to show upstream tracking branch
  # GIT_PROMPT_SHOW_UNTRACKED_FILES=normal # can be no, normal or all; determines counting of untracked files

  # GIT_PROMPT_SHOW_CHANGED_FILES_COUNT=0 # uncomment to avoid printing the number of changed files

  # GIT_PROMPT_STATUS_COMMAND=gitstatus_pre-1.7.10.sh # uncomment to support Git older than 1.7.10

  # GIT_PROMPT_START=...    # uncomment for custom prompt start sequence
  # GIT_PROMPT_END=...      # uncomment for custom prompt end sequence

  # as last entry source the gitprompt script
  # GIT_PROMPT_THEME=Custom # use custom theme specified in file GIT_PROMPT_THEME_FILE (default ~/.git-prompt-colors.sh)
  # GIT_PROMPT_THEME_FILE=~/.git-prompt-colors.sh
  # GIT_PROMPT_THEME=Solarized # use theme optimized for solarized color scheme
  source $HOME/.bash-git-prompt/gitprompt.sh
fi


# emacs:
# Local Variables:
# sh-basic-offset: 2
# End:

# vim: set ts=2 sw=2 et:
